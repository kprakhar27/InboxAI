name: Deploy to Oracle Server

on:
  push:
    branches: ["main"]
    paths: ["backend/**"]
  # pull_request:
  #   branches: ["main"]
  #   paths: ["backend/**"]
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create dynamic credentials.json file
        id: create-json-1
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "credentials.json"
          json: ${{ secrets.GOOGLE_CREDENTIALS }}
          dir: "backend/"
      - name: Create dynamic google_service_account.json file
        id: create-json-2
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "google_sa.json"
          json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          dir: "backend/"
      - name: Create .env file
        run: |
          touch backend/.env
          echo "${{ secrets.BACKEND_ENV }}" > backend/.env
          cat backend/.env
          - name: Authenticate with GCP
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
    
      - name: Authenticate Docker to Artifact Registry
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev --quiet
    
      - name: Build and Push Docker Image
        run: |
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME"
          docker build -t $IMAGE .
          docker push $IMAGE
    
      - name: Deploy to Cloud Run
        run: |
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME"
          gcloud run deploy $SERVICE \
            --image=$IMAGE \
            --platform=managed \
            --region=$REGION \
            --allow-unauthenticated
    
      - name: Post-deployment healthcheck
        run: |
          URL=$(gcloud run services describe $SERVICE \
            --platform=managed \
            --region=$REGION \
            --format='value(status.url)')
          echo "Checking $URL..."
          curl --fail --retry 3 --retry-delay 5 "$URL" || exit 1
    