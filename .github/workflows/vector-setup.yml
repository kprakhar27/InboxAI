name: Deploy Vector Database to Server

on:
  push:
    branches: ["main"]
    paths: ["vector_db/**"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check Airflow heartbeat
        run: |
          RESPONSE=$(curl -s http://${{ secrets.HOST }}:8080/health)
          echo "Airflow Response: $RESPONSE"

          SCHEDULER_HEALTH=$(echo "$RESPONSE" | jq -r '.scheduler.status')
          TRIGGERER_HEALTH=$(echo "$RESPONSE" | jq -r '.triggerer.status')

          if [[ "$SCHEDULER_HEALTH" == "healthy" && "$TRIGGERER_HEALTH" == "healthy" ]]; then
            echo "✅ Airflow scheduler and triggerer are healthy"
          else
            echo "❌ Airflow health check failed"
            exit 1
          fi

      - name: Run setup script
        run: |
          if [ -f $HOME/vector-database/docker-compose.yml ]; then
              echo "yes"
              sudo docker-compose -f $HOME/vector-database/docker-compose.yml down
              sudo rm -rf $HOME/vector-database/docker-compose.yml
              sudo cp -r vector_db/docker-compose.yml $HOME/vector-database/docker-compose.yml
          else
              echo "no"
              sudo mkdir -p $HOME/vector-database
              sudo cp -r vector_db/docker-compose.yml $HOME/vector-database/docker-compose.yml
          fi

      - name: Docker Compose Up for Vector DB
        run: |
          sudo docker-compose -f $HOME/vector-database/docker-compose.yml up --build -d

      - name: Check Vector DB heartbeat
        run: |
          sleep 30
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.HOST }}:8000/api/v2/heartbeat)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "❌ ChromaDB heartbeat check failed. HTTP $RESPONSE"
            exit 1
          else
            echo "✅ ChromaDB heartbeat OK. HTTP $RESPONSE"
          fi

      - name: Success
        run: echo "✅ Vector DB deployed successfully!"

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: deploy
    env:
      SMTP__SMTP_HOST: smtp.gmail.com
      SMTP__SMTP_PORT: 465
      SMTP__SMTP_USER: pc612001@gmail.com
      SMTP__SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP__SMTP_MAIL_FROM: pc612001@gmail.com
      AIRFLOW_ALERT_EMAIL: choudhari.pra@northeastern.edu

    steps:
      - name: Notify Success
        if: success()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: ${{ env.SMTP__SMTP_HOST }}
          server_port: ${{ env.SMTP__SMTP_PORT }}
          username: ${{ env.SMTP__SMTP_USER }}
          password: ${{ env.SMTP__SMTP_PASSWORD }}
          subject: "✅ Vector DB Deployment Successful"
          to: ${{ env.AIRFLOW_ALERT_EMAIL }}
          from: ${{ env.SMTP__SMTP_MAIL_FROM }}
          secure: true
          body: "Vector DB (Chroma) has been successfully deployed to the server."

      - name: Notify Failure
        if: failure()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: ${{ env.SMTP__SMTP_HOST }}
          server_port: ${{ env.SMTP__SMTP_PORT }}
          username: ${{ env.SMTP__SMTP_USER }}
          password: ${{ env.SMTP__SMTP_PASSWORD }}
          subject: "❌ Vector DB Deployment Failed"
          to: ${{ env.AIRFLOW_ALERT_EMAIL }}
          from: ${{ env.SMTP__SMTP_MAIL_FROM }}
          secure: true
          body: "Vector DB (Chroma) deployment failed. Please check GitHub Actions logs for more info."
