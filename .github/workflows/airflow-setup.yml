name: Deploy Airflow to Server

on:
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create dynamic credentials.json file
        id: create-json-1
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "credentials.json"
          json: ${{ secrets.GOOGLE_CREDENTIALS }}
          dir: "data_pipeline/airflow/config/"
      - name: Create dynamic google_service_account.json file
        id: create-json-2
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "google_sa.json"
          json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          dir: "data_pipeline/airflow/config/"
      - name: Run setup script
        run: |
          if [ -f $HOME/airflow/docker-compose.yaml ]
          then
              echo "yes"
              if [-f $HOME/vector-database/docker-compose.yaml]
              then
                  sudo docker-compose -f $HOME/vector-database/docker-compose.yaml down
              fi
              sudo docker-compose -f $HOME/airflow/docker-compose.yaml down
              sudo rm -rf $HOME/airflow
              sudo mkdir $HOME/airflow
              sudo cp -r data_pipeline/airflow/* $HOME/airflow
          else
              echo "no"
              sudo mkdir -p $HOME/airflow
              sudo cp -r data_pipeline/airflow/* $HOME/airflow
          fi
      - name: Create .env file
        run: |
          sudo chown -R $(whoami) $HOME/airflow
          echo "${{ secrets.AIRFLOW_ENV }}" > $HOME/airflow/.env
          cat $HOME/airflow/.env
      - name: Docker Compose Up for Airflow
        run: |
          sudo docker-compose -f $HOME/airflow/docker-compose.yml up --build -d
      - name: Docker Compose Up for Vector DB
        run: |
          if [ -f $HOME/vector-database/docker-compose.yaml ]
          then
              sleep 30
              sudo docker-compose -f $HOME/vector-database/docker-compose.yaml up --build -d
          fi
      - name: Check Vector DB heartbeat
        run: |
          RESPONSE=$(curl -s http://${{ secrets.HOST }}:8000/api/v2/heartbeat)
          echo "Vector DB Response: $RESPONSE"
          if echo "$RESPONSE" | grep -q '"nanosecond heartbeat"'; then
            echo "‚úÖ Vector DB is healthy"
          else
            echo "‚ùå Vector DB health check failed"
            exit 1
          fi

      - name: Check Airflow heartbeat
        run: |
          RESPONSE=$(curl -s http://${{ secrets.HOST }}:8080/health)
          echo "Airflow Response: $RESPONSE"
          
          SCHEDULER_HEALTH=$(echo "$RESPONSE" | jq -r '.scheduler.status')
          TRIGGERER_HEALTH=$(echo "$RESPONSE" | jq -r '.triggerer.status')
          
          if [[ "$SCHEDULER_HEALTH" == "healthy" && "$TRIGGERER_HEALTH" == "healthy" ]]; then
            echo "‚úÖ Airflow scheduler and triggerer are healthy"
          else
            echo "‚ùå Airflow health check failed"
            exit 1
          fi

      - name: Echo Success
        run: echo "üöÄ Airflow setup complete and healthy!"
  