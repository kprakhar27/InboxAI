name: Deploy Airflow to Server

on:
  push:
    branches: ["main"]
    paths: ["data_pipeline/**"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Make config directory
        run: |
          sudo mkdir -p data_pipeline/airflow/config
          sudo chown -R $(whoami) data_pipeline/airflow/config

      - name: Create dynamic credentials.json file
        id: create-json-1
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "credentials.json"
          json: ${{ secrets.GOOGLE_CREDENTIALS }}
          dir: "data_pipeline/airflow/config/"

      - name: Create dynamic google_service_account.json file
        id: create-json-2
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "google_sa.json"
          json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          dir: "data_pipeline/airflow/config/"

      - name: Run setup script
        run: |
          if [ -f $HOME/airflow/docker-compose.yaml ]
          then
              echo "yes"
              if [ -f $HOME/vector-database/docker-compose.yml ]
              then
                  echo "shutting down vector db"
                  sudo docker-compose -f $HOME/vector-database/docker-compose.yml down
              else
                  echo "no vector db to shut down"
              fi
              sudo docker-compose -f $HOME/airflow/docker-compose.yaml down
              sudo rm -rf $HOME/airflow
              sudo mkdir $HOME/airflow
              sudo cp -r data_pipeline/* $HOME/airflow
          else
              echo "no"
              sudo mkdir -p $HOME/airflow
              sudo cp -r data_pipeline/* $HOME/airflow
          fi

      - name: Create .env file
        run: |
          sudo chown -R $(whoami) $HOME/airflow
          echo "${{ secrets.AIRFLOW_ENV }}" > $HOME/airflow/.env
          cat $HOME/airflow/.env

      - name: Docker Compose Up for Airflow
        run: |
          sudo docker-compose -f $HOME/airflow/docker-compose.yaml up --build -d

      - name: Docker Compose Up for Vector DB
        run: |
          if [ -f $HOME/vector-database/docker-compose.yml ]
          then
              sleep 30
              sudo docker-compose -f $HOME/vector-database/docker-compose.yml up --build -d
          fi

      - name: Check Vector DB heartbeat
        run: |
          if [ -f $HOME/vector-database/docker-compose.yml ]
          then
              sleep 30
              RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.HOST }}:8000/api/v2/heartbeat)
              if [ "$RESPONSE" -ne 200 ]; then
                echo "‚ùå ChromaDB heartbeat check failed. HTTP $RESPONSE"
                exit 1
              else
                echo "‚úÖ ChromaDB heartbeat OK. HTTP $RESPONSE"
              fi
          fi

      - name: Check Airflow heartbeat
        run: |
          RESPONSE=$(curl -s http://${{ secrets.HOST }}:8080/health)
          echo "Airflow Response: $RESPONSE"

          SCHEDULER_HEALTH=$(echo "$RESPONSE" | jq -r '.scheduler.status')
          TRIGGERER_HEALTH=$(echo "$RESPONSE" | jq -r '.triggerer.status')

          if [[ "$SCHEDULER_HEALTH" == "healthy" && "$TRIGGERER_HEALTH" == "healthy" ]]; then
            echo "‚úÖ Airflow scheduler and triggerer are healthy"
          else
            echo "‚ùå Airflow health check failed"
            exit 1
          fi

      - name: Echo Success
        run: echo "üöÄ Airflow setup complete and healthy!"

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: deploy
    env:
      SMTP__SMTP_HOST: smtp.gmail.com
      SMTP__SMTP_PORT: 465
      SMTP__SMTP_USER: pc612001@gmail.com
      SMTP__SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP__SMTP_MAIL_FROM: pc612001@gmail.com
      AIRFLOW_ALERT_EMAIL: choudhari.pra@northeastern.edu

    steps:
      - name: Notify Success
        if: success()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: ${{ env.SMTP__SMTP_HOST }}
          server_port: ${{ env.SMTP__SMTP_PORT }}
          username: ${{ env.SMTP__SMTP_USER }}
          password: ${{ env.SMTP__SMTP_PASSWORD }}
          subject: "‚úÖ Airflow Deployment Successful"
          to: ${{ env.AIRFLOW_ALERT_EMAIL }}
          from: ${{ env.SMTP__SMTP_MAIL_FROM }}
          secure: true
          body: "Airflow has been successfully deployed to the server and is healthy."

      - name: Notify Failure
        if: failure()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: ${{ env.SMTP__SMTP_HOST }}
          server_port: ${{ env.SMTP__SMTP_PORT }}
          username: ${{ env.SMTP__SMTP_USER }}
          password: ${{ env.SMTP__SMTP_PASSWORD }}
          subject: "‚ùå Airflow Deployment Failed"
          to: ${{ env.AIRFLOW_ALERT_EMAIL }}
          from: ${{ env.SMTP__SMTP_MAIL_FROM }}
          secure: true
          body: "Airflow deployment failed. Please check the GitHub Actions logs for more details."
